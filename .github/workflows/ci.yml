name: Build

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  buildtest:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src
    steps:
    - name: ✨ Checkout code
      uses: actions/checkout@v2
    - name: ✨ Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: 🧱 Build
      run: dotnet build --no-restore
    - name: 🐛 Test
      run: dotnet test --no-build --verbosity normal
  release:
    needs: buildtest
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        runtime: ['win-x64', 'linux-x64', 'osx-x64']
    defaults:
      run:
        working-directory: src
    steps:
    - name: ✨ Checkout code
      uses: actions/checkout@v2
    - name: ✨ Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: 📦 Create publish artifacts for Windows
      run: dotnet publish CommandLine/CommandLine.csproj -o ${{ matrix.runtime }}-rel -c Release -r ${{ matrix.runtime }} -p:PublishSingleFile=true --no-self-contained
    - name: 🗜️ Zip artifacts for Windows
      run: zip -j -r midirecorder-${{ matrix.runtime }}.zip ${{ matrix.runtime }}-rel
    - name: 📦 Release
      uses: softprops/action-gh-release@master
      with:
        files: |
          src/midirecorder-${{ matrix.runtime }}.zip
        draft: true
        fail_on_unmatched_files: true
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
